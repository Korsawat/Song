{"version":3,"sources":["spotify.js","App.js","reportWebVitals.js","index.js"],"names":["loginUrl","concat","join","App","token","setToken","useState","songs","setSongs","pairs","setPairs","currentPair","setCurrentPair","progress","setProgress","showRankings","setShowRankings","useEffect","hash","getTokenFromUrl","window","location","substring","accessToken","URLSearchParams","get","console","log","access_token","_token","async","data","offset","allSongs","url","headers","Authorization","response","fetch","ok","status","text","Error","json","items","total","error","message","map","song","track","compared","wins","getLikedSongs","then","initialPairs","generatePairs","pickRandomPair","totalSongs","length","comparedSongs","filter","i","j","push","remainingPairs","pair","randomIndex","Math","floor","random","handleChoice","winner","loser","updatedSongs","id","React","createElement","className","Fragment","rankSongs","ranked","sort","a","b","rank","forEach","index","key","name","onClick","src","album","images","alt","style","width","round","handleTie","showRankedSongs","href","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oLAEA,MAOaA,EAAQ,GAAAC,OAPC,yCAOkB,eAAAA,OALtB,mCAK6C,kBAAAA,OAN1C,mCAMuE,WAAAA,OAJ7E,CACb,qBAG2GC,KAC3G,OACD,+CCoLcC,MA3LHA,KACV,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAaC,GAAkBN,mBAAS,CAAC,KAAM,QAC/CO,EAAUC,GAAeR,mBAAS,IAClCS,EAAcC,GAAmBV,oBAAS,GAEjDW,oBAAU,KACR,MAAMC,EDcqBC,MAC7B,MAAMD,EAAOE,OAAOC,SAASH,KAAKI,UAAU,GAEtCC,EADa,IAAIC,gBAAgBN,GACRO,IAAI,gBAEnC,OADAC,QAAQC,IAAI,gBAAiBJ,GACtB,CAAEK,aAAcL,ICnBRJ,GACbC,OAAOC,SAASH,KAAO,GAEvB,MAAMW,EAASX,EAAKU,aAChBC,IACFxB,EAASwB,GDiBcC,WAE3B,IAEIC,EAFAC,EAAS,EACTC,EAAW,GAGf,IACE,EAAG,CACD,MAAMC,EAAG,8CAAAjC,OAPC,GAOqD,YAAAA,OAAW+B,GACpEG,EAAU,CACdC,cAAa,UAAAnC,OAAYG,IAG3BsB,QAAQC,IAAI,gBAAiBO,GAC7BR,QAAQC,IAAI,eAAgBvB,GAE5B,MAAMiC,QAAiBC,MAAMJ,EAAK,CAAEC,YAEpC,IAAKE,EAASE,GAGZ,MAFAb,QAAQC,IAAI,mBAAoBU,EAASG,QACzCd,QAAQC,IAAI,uBAAwBU,EAASI,QACrB,MAApBJ,EAASG,OACL,IAAIE,MAAM,oDAEV,IAAIA,MAAK,uBAAAzC,OAAwBoC,EAASG,SAIpDT,QAAaM,EAASM,OACtBV,EAAW,IAAIA,KAAaF,EAAKa,OACjCZ,GA7BU,SA8BHA,EAASD,EAAKc,OACvB,MAAOC,GAEP,MADApB,QAAQoB,MAAM,wBAAyBA,EAAMC,SACvCD,EAGR,OAAOb,EAASe,IAAKC,IAAI,CACvBC,MAAOD,EAAKC,MACZC,UAAU,EACVC,KAAM,MCxDJC,CAAcxB,GAAQyB,KAAM/C,IAC1BC,EAASD,EAAMyC,IAAKC,IAAI,IAAWA,EAAME,UAAU,MACnDrC,EAAY,GACZ,MAAMyC,EAAeC,EAAcjD,GACnCG,EAAS6C,GACTE,EAAeF,OAGlB,IAEHtC,oBAAU,KACR,MAAMyC,EAAanD,EAAMoD,OACnBC,EAAgBrD,EAAMsD,OAAQZ,GAASA,EAAKE,UAAUQ,OAE5D7C,EADoB8C,EAAgBF,EAAc,MAEjD,CAACnD,IAEJ,MAAMiD,EAAiBjD,IACrB,MAAME,EAAQ,GACd,IAAK,IAAIqD,EAAI,EAAGA,EAAIvD,EAAMoD,OAAS,EAAGG,IACpC,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAIxD,EAAMoD,OAAQI,IACpCtD,EAAMuD,KAAK,CAACzD,EAAMuD,GAAIvD,EAAMwD,KAGhC,OAAOtD,GAGHgD,EAAkBhD,IACtB,MAAMwD,EAAiBxD,EAAMoD,OAC1BK,IAAUA,EAAK,GAAGf,WAAae,EAAK,GAAGf,UAE1C,GAA8B,IAA1Bc,EAAeN,OAEjB,YADA3C,GAAgB,GAGlB,MAAMmD,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,EAAeN,QAC9D/C,EAAeqD,EAAeE,IAC9BzD,EAASD,EAAMoD,OAAQK,GAASA,IAASD,EAAeE,MAGpDI,EAAeA,CAACC,EAAQC,KAC5B,MAAMC,EAAenE,EAAMyC,IAAKC,GAC9BA,EAAKC,MAAMyB,KAAOH,EAAOtB,MAAMyB,GAC3B,IAAK1B,EAAME,UAAU,EAAMC,MAAOH,EAAKG,MAAQ,GAAK,GACpDH,GAENzC,EAASkE,GACTjB,EAAehD,IAiCjB,OACEmE,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,UAAS,mBAEtB1E,EAGAwE,IAAAC,cAAAD,IAAAG,SAAA,KACEH,IAAAC,cAAA,OAAKC,UAAU,qBAAoB,sBACbvE,EAAMoD,QAG3B5C,EACC6D,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,eAGRD,IAAAC,cAAA,aAlCIG,MAChB,MAAMC,EAAS1E,EAAM2E,KAAK,CAACC,EAAGC,KAAOA,EAAEhC,MAAQ,IAAM+B,EAAE/B,MAAQ,IAC/D,IAAIiC,EAAO,EAOX,OANAJ,EAAOK,QAAQ,CAACrC,EAAMsC,KAChBA,EAAQ,IAAMtC,EAAKG,MAAQ,MAAQ6B,EAAOM,EAAQ,GAAGnC,MAAQ,KAC/DiC,EAAOE,EAAQ,GAEjBtC,EAAKoC,KAAOA,IAEPJ,GA0BQD,GAAYhC,IAAKC,GAChB2B,IAAAC,cAAA,MAAIW,IAAKvC,EAAKC,MAAMyB,IAClBC,IAAAC,cAAA,UAAK5B,EAAKoC,MACVT,IAAAC,cAAA,UAAK5B,EAAKC,MAAMuC,WAO1Bb,IAAAC,cAAAD,IAAAG,SAAA,KACGpE,EAAY,IAAMA,EAAY,GAC7BiE,IAAAC,cAAAD,IAAAG,SAAA,KACEH,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OACEC,UAAU,OACVY,QAASA,IACPnB,EAAa5D,EAAY,GAAIA,EAAY,KAG3CiE,IAAAC,cAAA,OACEc,IAAKhF,EAAY,GAAGuC,MAAM0C,MAAMC,OAAO,GAAG3D,IAC1C4D,IAAKnF,EAAY,GAAGuC,MAAMuC,OAE5Bb,IAAAC,cAAA,WAAMlE,EAAY,GAAGuC,MAAMuC,OAE7Bb,IAAAC,cAAA,OACEC,UAAU,OACVY,QAASA,IACPnB,EAAa5D,EAAY,GAAIA,EAAY,KAG3CiE,IAAAC,cAAA,OACEc,IAAKhF,EAAY,GAAGuC,MAAM0C,MAAMC,OAAO,GAAG3D,IAC1C4D,IAAKnF,EAAY,GAAGuC,MAAMuC,OAE5Bb,IAAAC,cAAA,WAAMlE,EAAY,GAAGuC,MAAMuC,QAI/Bb,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OACEC,UAAU,WACViB,MAAO,CAAEC,MAAK,GAAA/F,OAAKY,EAAQ,OAE1BuD,KAAK6B,MAAMpF,GAAU,OAK5B+D,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAQa,QA1GVQ,KAChB,MAAMxB,EAAenE,EAAMyC,IAAKC,GAE5BA,EAAKC,MAAMyB,KAAOhE,EAAY,GAAGuC,MAAMyB,IACvC1B,EAAKC,MAAMyB,KAAOhE,EAAY,GAAGuC,MAAMyB,GAEhC,IAAK1B,EAAME,UAAU,EAAMC,MAAOH,EAAKG,MAAQ,GAAK,GAEtDH,GAETzC,EAASkE,GACTjB,EAAehD,KA+F+B,iBAE9BmE,IAAAC,cAAA,UAAQa,QA9FFS,KACtBnF,GAAgB,KA6FkC,uBAItC4D,IAAAC,cAAA,WAAK,gBA7EbD,IAAAC,cAAA,KAAGuB,KAAMpG,GAAU,sBC5FZqG,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnD,KAAAkD,EAAAE,KAAA,UAAqBpD,KAAKqD,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzC,IAAAC,cAACD,IAAM0C,WAAU,KACf1C,IAAAC,cAAC1E,EAAG,QAORkG","file":"static/js/main.d2826fe1.chunk.js","sourcesContent":["// spotify.js\r\n\r\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nconst REDIRECT_URI = 'https://korsawat.github.io/Song/';\r\nconst CLIENT_ID = \"e09c3389cd8f4a0c92f03e1bc5b423c2\"; // Replace with your Spotify client ID\r\nconst SCOPES = [\r\n  'user-library-read', \r\n];\r\n\r\nexport const loginUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES.join(\r\n  '%20'\r\n)}&response_type=token&show_dialog=true`;\r\n\r\n// export const getTokenFromUrl = () => {\r\n//   return window.location.hash.substring(1).split('&').reduce((initial, item) => {\r\n//     let parts = item.split('=');\r\n//     initial[parts[0]] = decodeURIComponent(parts[1]);\r\n//     return initial;\r\n//   }, {});\r\n// };\r\n\r\n// export const getTokenFromUrl = () => {\r\n//   const hash = window.location.hash.substring(1);\r\n//   const hashParams = new URLSearchParams(hash);\r\n//   const accessToken = hashParams.get('access_token');\r\n//   return { access_token: accessToken };\r\n// };\r\nexport const getTokenFromUrl = () => {\r\n  const hash = window.location.hash.substring(1);\r\n  const hashParams = new URLSearchParams(hash);\r\n  const accessToken = hashParams.get('access_token');\r\n  console.log('Access Token:', accessToken); // Log the access token for debugging\r\n  return { access_token: accessToken };\r\n};\r\n\r\nexport const getLikedSongs = async (token) => {\r\n  const limit = 50;\r\n  let offset = 0;\r\n  let allSongs = [];\r\n  let data;\r\n\r\n  try {\r\n    do {\r\n      const url = `https://api.spotify.com/v1/me/tracks?limit=${limit}&offset=${offset}`;\r\n      const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n\r\n      console.log('Fetching URL:', url);\r\n      console.log('Using token:', token);\r\n\r\n      const response = await fetch(url, { headers });\r\n\r\n      if (!response.ok) {\r\n        console.log('Response Status:', response.status);\r\n        console.log('Response Text:', await response.text()); // Log the response text for more details\r\n        if (response.status === 403) {\r\n          throw new Error('Access forbidden. Check Spotify API permissions.');\r\n        } else {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n      }\r\n\r\n      data = await response.json();\r\n      allSongs = [...allSongs, ...data.items];\r\n      offset += limit;\r\n    } while (offset < data.total);\r\n  } catch (error) {\r\n    console.error('Error fetching songs:', error.message);\r\n    throw error;\r\n  }\r\n\r\n  return allSongs.map((song) => ({\r\n    track: song.track,\r\n    compared: false,\r\n    wins: 0,\r\n  }));\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { loginUrl, getTokenFromUrl, getLikedSongs } from \"./spotify\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [token, setToken] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const [pairs, setPairs] = useState([]);\n  const [currentPair, setCurrentPair] = useState([null, null]);\n  const [progress, setProgress] = useState(0);\n  const [showRankings, setShowRankings] = useState(false);\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; // Clear the hash after token extraction\n  \n    const _token = hash.access_token;\n    if (_token) {\n      setToken(_token);\n      getLikedSongs(_token).then((songs) => {\n        setSongs(songs.map((song) => ({ ...song, compared: false })));\n        setProgress(0);\n        const initialPairs = generatePairs(songs);\n        setPairs(initialPairs);\n        pickRandomPair(initialPairs);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const totalSongs = songs.length;\n    const comparedSongs = songs.filter((song) => song.compared).length;\n    const percentage = (comparedSongs / totalSongs) * 100;\n    setProgress(percentage);\n  }, [songs]);\n\n  const generatePairs = (songs) => {\n    const pairs = [];\n    for (let i = 0; i < songs.length - 1; i++) {\n      for (let j = i + 1; j < songs.length; j++) {\n        pairs.push([songs[i], songs[j]]);\n      }\n    }\n    return pairs;\n  };\n\n  const pickRandomPair = (pairs) => {\n    const remainingPairs = pairs.filter(\n      (pair) => !pair[0].compared || !pair[1].compared\n    );\n    if (remainingPairs.length === 0) {\n      setShowRankings(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * remainingPairs.length);\n    setCurrentPair(remainingPairs[randomIndex]);\n    setPairs(pairs.filter((pair) => pair !== remainingPairs[randomIndex]));\n  };\n\n  const handleChoice = (winner, loser) => {\n    const updatedSongs = songs.map((song) =>\n      song.track.id === winner.track.id\n        ? { ...song, compared: true, wins: (song.wins || 0) + 1 }\n        : song\n    );\n    setSongs(updatedSongs);\n    pickRandomPair(pairs);\n  };\n\n  const handleTie = () => {\n    const updatedSongs = songs.map((song) => {\n      if (\n        song.track.id === currentPair[0].track.id ||\n        song.track.id === currentPair[1].track.id\n      ) {\n        return { ...song, compared: true, wins: (song.wins || 0) + 1 };\n      }\n      return song;\n    });\n    setSongs(updatedSongs);\n    pickRandomPair(pairs);\n  };\n\n  const showRankedSongs = () => {\n    setShowRankings(true);\n  };\n\n  const rankSongs = () => {\n    const ranked = songs.sort((a, b) => (b.wins || 0) - (a.wins || 0));\n    let rank = 1;\n    ranked.forEach((song, index) => {\n      if (index > 0 && (song.wins || 0) !== (ranked[index - 1].wins || 0)) {\n        rank = index + 1;\n      }\n      song.rank = rank;\n    });\n    return ranked;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">Song Comparison</div>\n\n      {!token ? (\n        <a href={loginUrl}>Login to Spotify</a>\n      ) : (\n        <>\n          <div className=\"total-liked-songs\">\n            Total Liked Songs: {songs.length}\n          </div>\n\n          {showRankings ? (\n            <div className=\"ranked-songs\">\n              <h2>Ranked Songs</h2>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Rank</th>\n                    <th>Song Name</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rankSongs().map((song) => (\n                    <tr key={song.track.id}>\n                      <td>{song.rank}</td>\n                      <td>{song.track.name}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <>\n              {currentPair[0] && currentPair[1] ? (\n                <>\n                  <div className=\"song-container\">\n                    <div\n                      className=\"song\"\n                      onClick={() =>\n                        handleChoice(currentPair[0], currentPair[1])\n                      }\n                    >\n                      <img\n                        src={currentPair[0].track.album.images[0].url}\n                        alt={currentPair[0].track.name}\n                      />\n                      <div>{currentPair[0].track.name}</div>\n                    </div>\n                    <div\n                      className=\"song\"\n                      onClick={() =>\n                        handleChoice(currentPair[1], currentPair[0])\n                      }\n                    >\n                      <img\n                        src={currentPair[1].track.album.images[0].url}\n                        alt={currentPair[1].track.name}\n                      />\n                      <div>{currentPair[1].track.name}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"progress-container\">\n                    <div className=\"progress-bar\">\n                      <div\n                        className=\"progress\"\n                        style={{ width: `${progress}%` }}\n                      >\n                        {Math.round(progress)}%\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"buttons\">\n                    <div className=\"buttons-container\">\n                      <button onClick={handleTie}>Can't Decide</button>\n                    </div>\n                    <button onClick={showRankedSongs}>Show Ranked Songs</button>\n                  </div>\n                </>\n              ) : (\n                <div>Loading...</div>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}